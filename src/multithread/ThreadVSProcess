Thread v.s. process

A Process runs independently and isolated of other processes. It cannot directly access shared data in other processes.
A Thread is a so called lightweight process. It has its own stack, but access shared data of other threads int the same
process. Every thread has its own memory cache - Thread Local Storage
A Java application runs by default in One Process.
Inter-process communication (IPC) is a mechanism that allows the exchange of data between processes. e.g. Java applications

A process can be thought of as an instance of a program in execution.
Each process is an independent entity to which system resources (CPU time, memory, etc.) are allocated and each process
is executed in a separate address space.
One process cannot access the variables and data structures of another process.
If you wish to access another process' resources, inter-process communications have to be used such as pipes, files,
sockets etc.

A thread uses the same stack space of a process.
A process can have multiple threads.
A key difference between processes and threads is that multiple threads share parts of their state. Typically, one allows
multiple threads to read and write the same memory (no processes can directly access the memory of another process).
However, each thread still has its own register and its own stack, but other threads can read and write the heap memory.
A thread is particular execution path of a process; when one thread modifies a process resource, the change is immediately
visible to sibling threads.

examples:
Application                 Multiprocessing                      Multithreading
Browser                     Chrome
Controller                  PHP                                  Spring Boot
Database                    PostgreSQL                           MySQL

explanation: Chrome every tab is a process, one tab dies doesn't influence other tabs
             Every request come in, PHP spawns a process to handle it, but spring boot spawns a thread to handle it
             PostgreSQL and MySQL are similar to the previous two


differences between multiprocessing and multithreading

1.stack
2.heap
3.code segment
4.static - string pool

thread has it's own stack, share heaps


