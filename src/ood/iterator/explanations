iterator pattern has two functions
boolean hasNext()
<T> next()

we can iterate every element in an object that has implements iterator interface
regardless what the object is

when you iterating a iterator, you can't modify the iterator

but you can use remove() to remove the current element
runtime exception: you do not need to explicitly handle the exception in the method

interrupted exception, must catch or throw to the outer method

iterator can do lazy loading
when the input is too big to fit into the memory